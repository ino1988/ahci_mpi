#-- Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
#--
#-- This file contains confidential and proprietary information
#-- of Xilinx, Inc. and is protected under U.S. and
#-- international copyright and other intellectual property
#-- laws.
#--
#-- DISCLAIMER
#-- This disclaimer is not a license and does not grant any
#-- rights to the materials distributed herewith. Except as
#-- otherwise provided in a valid license issued to you by
#-- Xilinx, and to the maximum extent permitted by applicable
#-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#-- (2) Xilinx shall not be liable (whether in contract or tort,
#-- including negligence, or under any other theory of
#-- liability) for any loss or damage of any kind or nature
#-- related to, arising under or in connection with these
#-- materials, including for any direct, or any indirect,
#-- special, incidental, or consequential loss or damage
#-- (including loss of data, profits, goodwill, or any type of
#-- loss or damage suffered as a result of any action brought
#-- by a third party) even if such damage or loss was
#-- reasonably foreseeable or Xilinx had been advised of the
#-- possibility of the same.
#--
#-- CRITICAL APPLICATIONS
#-- Xilinx products are not designed or intended to be fail-
#-- safe, or for use in any application requiring fail-safe
#-- performance, such as life-support or safety devices or
#-- systems, Class III medical devices, nuclear facilities,
#-- applications related to the deployment of airbags, or any
#-- other applications that could lead to death, personal
#-- injury, or severe property or environmental damage
#-- (individually and collectively, "Critical
#-- Applications"). Customer assumes the sole risk and
#-- liability of any use of Xilinx products in Critical
#-- Applications, subject only to applicable laws and
#-- regulations governing limitations on product liability.
#--
#-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#-- PART OF THIS FILE AT ALL TIMES.

###################################################################
##
## Name     : dcr_v29
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN dcr_v29

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION BUS_STD = DCR
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 16
OPTION DWIDTH = 32
OPTION AWIDTH = 10
OPTION DESC = Device Control Register (DCR) Bus 2.9
OPTION LONG_DESC = 32-Bit Xilinx implementation of IBM 32-Bit Device Control Register Bus (DCR) Architecture Specification
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5fx=PRODUCTION, qvirtex5lx=PRE_PRODUCTION, qvirtex5sx=PRE_PRODUCTION, qvirtex5fx=PRE_PRODUCTION, qvirtex5tx=PRE_PRODUCTION, kintex7=PRODUCTION, virtex5sx=PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DCR_NUM_SLAVES = 4, DT = integer
PARAMETER C_DCR_AWIDTH = 10, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DCR_DWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_USE_LUT_OR = 1, DT = integer

## Ports
PORT M_dcrABus = M_dcrABus, DIR = I, VEC = [0:C_DCR_AWIDTH-1]
PORT M_dcrDBus = M_dcrDBus, DIR = I, VEC = [0:C_DCR_DWIDTH-1]
PORT M_dcrRead = M_dcrRead, DIR = I
PORT M_dcrWrite = M_dcrWrite, DIR = I
PORT DCR_M_DBus = DCR_M_DBus, DIR = O, VEC = [0:C_DCR_DWIDTH-1]
PORT DCR_Ack = DCR_Ack, DIR = O
PORT DCR_ABus = DCR_ABus, DIR = O, VEC = [0:C_DCR_AWIDTH*C_DCR_NUM_SLAVES-1]
PORT DCR_Sl_DBus = DCR_Sl_DBus, DIR = O, VEC = [0:C_DCR_DWIDTH*C_DCR_NUM_SLAVES-1]
PORT DCR_Read = DCR_Read, DIR = O, VEC = [0:C_DCR_NUM_SLAVES-1]
PORT DCR_Write = DCR_Write, DIR = O, VEC = [0:C_DCR_NUM_SLAVES-1]
PORT Sl_dcrDBus = Sl_dcrDBus, DIR = I, VEC = [0:C_DCR_DWIDTH*C_DCR_NUM_SLAVES-1]
PORT Sl_dcrAck = Sl_dcrAck, DIR = I, VEC = [0:C_DCR_NUM_SLAVES-1]

END
